#################################################################
#
# Copyright (c) 2018- Stanford University. All rights reserved.
# 
# The information and source code contained herein is the 
# property of Stanford University, and may not be disclosed or
# reproduced in whole or in part without explicit written 
# authorization from Stanford University. Contact bclim@stanford.edu for details.
# 
# * Author     : Byong Chan Lim (bclim@stanford.edu)
# * Description: mProbo test configuration file for "ringosc" example
# 
# * Note       :
# 
# * Revision   :
#   - 7/26/2016: First release
# 
#################################################################


[Test1] 
  description = Ring oscillator where the outputs (cko and ckob) are full swing clocks.

  [[option]]
    max_sample = 10
    regression_sval_threshold = 10.0 

  [[simulation]]
    timeunit = 1fs
    trantime = 10us
    
  [[port]]
    [[[vreg]]] 
      port_type = analoginput
      regions = 0.5, 0.9
      pinned = False
      default_value = 0.0 
      description = control voltage
    [[[vdd]]] 
      port_type = analoginput
      regions = 0.95, 1.05
      pinned = True
      default_value = 1.0
      description = Power supply
    [[[freqout_cko]]] 
      port_type = analogoutput
      regions = 1e6, 4100e6
      abstol = 100e6 # 1 deg
      description = frequency of cko
    [[[freqout_ckob]]] 
      port_type = analogoutput
      regions = 1e6, 4100e6
      abstol = 100e6 # 1 deg
      description = frequency of ckob

  [[testbench]]
    tb_code  = '''
ringosc dut ( .vdd(vdd), .vreg(vreg), .cko(cko), .ckob(ckob) );
vdc #( .dc(@vdd) ) xvdd ( .vout(vdd) );
vdc #( .dc(@vreg) ) xvreg ( .vout(vreg) );
meas_clock #( .dir(1'b1), .vlth(0.5), .tstart(10e-9) ) xmeascko ( .clk(cko), .vdd(vdd), .frequency(freqout_cko) );
meas_clock #( .dir(1'b1), .vlth(0.5), .tstart(10e-9) ) xmeasckob ( .clk(ckob), .vdd(vdd), .frequency(freqout_ckob) );
strobe_ss #(.ts(0.0), .ti(15e-9), .tol(20e6), .filename("meas_freqout_cko.txt")) xfreqout_cko (.in(freqout_cko), .detect(ss_det1));
strobe_ss #(.ts(0.0), .ti(15e-9), .tol(20e6), .filename("meas_freqout_ckob.txt")) xfreqout_ckob (.in(freqout_ckob), .detect(ss_det2));
finish_sim #(.no_sig(2)) xfinish (.in({ss_det1,ss_det2}));
amsgnd amsgnd (.gnd(gnd));
    '''
    [[[initial_condition]]] 
      [[[[golden]]]]  # initial states for golden model only
        dut.xvco.m0 = 0.0
        dut.xvco.p0 = 1.0
