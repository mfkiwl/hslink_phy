#################################################################
#
# Copyright (c) 2018- Stanford University. All rights reserved.
# 
# The information and source code contained herein is the 
# property of Stanford University, and may not be disclosed or
# reproduced in whole or in part without explicit written 
# authorization from Stanford University. Contact bclim@stanford.edu for details.
# 
# * Author     : Byong Chan Lim (bclim@stanford.edu)
# * Description: mProbo test configuration file for "amux" example
# 
# * Note       :
# 
# * Revision   :
#   - 7/26/2016: First release
# 
#################################################################


[test1] # test named "test1"

  description = '''
It is to test an analog multiplexer which outputs a voltage signal which is one of two analog voltage inputs selected by a digital input. 

A test is generated such that two analog input ports (v0 and v1) in voltage domain drive the pins (i0 and i1) of the DUT. The analog output port (vout) of the linear system is defined in voltage domain which is mapped to the pin (out) of the DUT. There is a "true digital" input port (sel0 which drives sel0 pin) that creates two linear circuits depending on its state.
''' # description of this test

  [[option]] # setup for linear regression
    max_sample = 20   # maximum number of test vectors 
    regression_order = 1  # max polynomial order in linear regression  (default: 1)
    regression_en_interact = True  # compute the first order interaction between inputs in linear models (default: True)
    regression_sval_threshold = 10.0 # ignore inputs which contribute to outputs has less than this normalized sensitivity (in percent) when generating suggested linear models (Default: 5 %)

  [[simulation]]   # setup for simulation time
    timeunit = 100ps # Verilog-compliant time unit and precision
    trantime  = 1us   # transient time
    
  [[port]]  # port specification
    [[[vout]]]                 # port name is vout               
      port_type = analogoutput # analog output port
      regions = -0.1, 1.9      # min/max spec of the analog output port
      abstol = 1e-3            # absolute tolerance used to check residual error assessment, offset value
      description = voltage output # description of this 'vout' port
    [[[avdd]]]                 
      port_type = analoginput  # analog input port
      regions = 1.75, 1.85     # list of PWL regions to be verified
      pinned = True            # True if the value is fixed to default_value, then it'll be excluded from linear model inputs
      default_value = 1.8      # default value when pinned==True
      description = power supply voltage
    [[[v0]]]                  
      port_type = analoginput  
      regions = 0.2, 1.6
      pinned = False          
      default_value = 0.55
      description = voltage input to i0 pin
    [[[v1]]]                 
      port_type = analoginput 
      regions = 0.2, 1.6
      pinned = False          
      default_value = 0.55
      description = voltage input to i1 pin
    [[[sel0]]]                 
      port_type = digitalmode  # true digital mode port which generates multiple linear circuit configuration
      bit_width = 1            # bit width 
      encode = binary          # encoding style; binary, thermometer, etc
      prohibited =             # list of prohibited code from generating modes
      pinned = False
      default_value = b0
      description = select input

  [[testbench]] # an embedded testbench 
    temperature = 30  # temperate in Celsius degree
    tb_code  = '''
amux dut ( .avdd(avdd), .avss(gnd), .sel0(sel0), .i0(v0), .i1(v1), .out(vout)); // device under test
vdc #(.dc(@avdd) ) xavdd ( .vout(avdd) );  // dc voltage source in PWL datatype
vdc #(.dc(@v0) ) xv0 ( .vout(v0) );
vdc #(.dc(@v1) ) xv1 ( .vout(v1) );
bitvector #( .value(@sel0), .bit_width(1) ) xsel0 ( .out(sel0) ); // bit vector
// sample/dump the response "vout" defined as analog output in [[port]] section
// note that the filename has a prefix of "meas_" followed by its output port name "vout", and a file extension ".txt"
strobe_ss #(.ts(0), .ti(1e-9), .tol(0.001), .filename("meas_vout.txt")) xstrobe (.in(vout), .detect(ss_detect));
finish_sim xfinish(.in(ss_detect)); // for automatically finishing of simulation
amsgnd amsgnd(.gnd(gnd)); // define AMS ground
    ''' # core part of an embedded testbench in Verilog(-AMS)
