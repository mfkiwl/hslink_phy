#################################################################
#
# Copyright (c) 2018- Stanford University. All rights reserved.
# 
# The information and source code contained herein is the 
# property of Stanford University, and may not be disclosed or
# reproduced in whole or in part without explicit written 
# authorization from Stanford University. Contact bclim@stanford.edu for details.
# 
# * Author     : Byong Chan Lim (bclim@stanford.edu)
# * Description: mProbo test configuration file for "tnh" example
# 
# * Note       :
# 
# * Revision   :
#   - 7/26/2016: First release
# 
#################################################################


[test1] 
  description = '''
A sample-and-hold circuit is tested here. Since the circuit's function will depend on the state of the switch controlled by `sclk`, we sample the output at two different time stamps ( a. at the end of sampling phase (3.79ns), and b. right after hold starts (3.99ns). at the end of hold phase (6.99ns) ). Note that this circuit has a state which should be the input to the system as well. See how the `initial_condition` section deals with the state input.
'''

  [[option]] 
    max_sample = 10
    regression_sval_threshold = 1.0

  [[simulation]]  
    timeunit = 10ps
    trantime  = 7.1ns
    
  [[port]]
    [[[vout_track]]] 
      port_type = analogoutput
      regions = -0.1, 1.0
      abstol = 1e-3
      gaintol = 15
      description = output voltage at the end of sampling phase
    [[[vout_hold]]] 
      port_type = analogoutput
      regions = -0.1, 1.0
      abstol = 1e-3
      gaintol = 15
      description = output voltage at the beginning of hold phase
    [[[vin]]] 
      port_type = analoginput
      regions = 0.0, 0.1 
      pinned = False
      default_value = 0.0
      description = input voltage
    [[[vout_state]]] 
      port_type = analoginput
      regions = 0.0, 0.1
      pinned = False
      default_value = 0.0
      description = output state input
    [[[sclk]]]
      port_type = digitalmode
      bit_width = 1
      encode = binary
      prohibited = 
      pinned = True
      default_value = b1
      description = s&h switch control input

  [[testbench]] 
    tb_code = '''
parameter real track_period = 200e-12 ;
parameter real hold_period = 4e-9 - track_period ;
tnh dut ( .in(in), .out(out), .sclk(sclk) );
vdc #( .dc(1.0) ) xavdd ( .vout(avdd) );
vpulse #( .v0(@vout_state), .v1(@vin), .td(0.1e-9), .tr(10e-12), .tf(10e-12), .tw(1), .tp(2) ) xvin ( .vout(in) );

pulse #( .b0(1'b0), .b1(@sclk), .td(hold_period), .tw(track_period), .tp(2) ) xsclk ( .out(sclk) );
dump_diff #(.window(1'b0), .ts(0.50e-9), .filename("meas_vout_hold.txt"))  meas_vout_t1 ( .inp(out), .inn(gnd) ); 
dump_diff #(.window(1'b0), .ts(3.97e-9), .filename("meas_vout_track.txt"))  meas_vout_t2 ( .inp(out), .inn(gnd) ); 
amsgnd amsgnd (.gnd(gnd));
    '''
    [[[initial_condition]]]
      [[[[golden]]]]
        dut.out = @vout_state
      [[[[revised]]]]
        dut.out = "'{@vout_state,0,0}"
